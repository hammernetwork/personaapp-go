image: registry.gitlab.com/persona_app_online/devops/golangci:latest

variables:
  DOCKER_DRIVER: overlay
  REGISTRY: registry.gitlab.com
  SERVICE_NAMESPACE: persona_app_online
  PROJECT_NAME: personaapp-go
  IMAGE_NAME: personaapp
  IMAGE_MASTER: $REGISTRY/$SERVICE_NAMESPACE/$PROJECT_NAME/$IMAGE_NAME:$CI_PIPELINE_ID


stages:
  - test
  - build
#  - build_image_master
  - deploy_dev
  - deploy

test:
  image: golang:1.14-alpine
  stage: test
  script:
    -  go test -v -race -count=1 ./

#build:
#  stage: build
#  image: docker:17
#  services:
#    - docker:dind
#  before_script:
#    - docker login $REGISTRY -u $GITLAB_REGISTRY_USER -p $GITLAB_REGISTRY_TOKEN
#  script:
#    - docker build -t $IMAGE_MASTER .
#  except:
#    - master

build:
  stage: build
  image: docker:17
  services:
    - docker:dind
  before_script:
    - docker login $REGISTRY -u $GITLAB_REGISTRY_USER -p $GITLAB_REGISTRY_TOKEN
  script:
    - docker build -t $IMAGE_MASTER .
    - docker push $IMAGE_MASTER
  only:
    - master

deploy_dev:
  image: alpine
  stage: deploy_dev
  script:
    - mkdir ~/.ssh && echo ${SSH_KEY} |base64 -d > ~/.ssh/persona_key && chmod 600 ~/.ssh/persona_key
    - apk --update add openssh-client
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/persona_key root@api.hirepersona.online /root/run_dev.sh $CI_PIPELINE_ID
  only:
    - master

deploy:
  image: alpine
  stage: deploy
  script:
    - mkdir ~/.ssh && echo ${SSH_KEY} |base64 -d > ~/.ssh/persona_key && chmod 600 ~/.ssh/persona_key
    - apk --update add openssh-client
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/persona_key root@api.hirepersona.online /root/run.sh $CI_PIPELINE_ID
  when: manual
  only:
    - master
