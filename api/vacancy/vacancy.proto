syntax = "proto3";

package personaappapi.vacancy;

import "google/protobuf/wrappers.proto";

option go_package = "personaapp/pkg/grpcapi/vacancy";
option java_package = "online.personaapp";
option java_outer_classname = "GrpcVacancy";

service PersonaAppVacancy {
    rpc GetVacancyCategoriesList (GetVacancyCategoriesListRequest) returns (GetVacancyCategoriesListResponse);
    rpc GetVacanciesList (GetVacanciesListRequest) returns (GetVacanciesListResponse);
    rpc GetVacancyDetails (GetVacancyDetailsRequest) returns (GetVacancyDetailsResponse);
}

// Get Vacancies filters list
message GetVacancyCategoriesListRequest {
}

message GetVacancyCategoriesListResponse {
    message VacancyCategory {
        string id = 1;
        string title = 2;
        string icon_url = 3;
    }

    map<string, VacancyCategory> vacancy_categories = 1;
}

// Get Vacancies List
message GetVacanciesListRequest {
    map<string, Empty> categories_ids = 1;
    google.protobuf.StringValue cursor = 2;
    google.protobuf.Int32Value count = 3;
}

message GetVacanciesListResponse {
    message VacancyDetails {
        Vacancy vacancy = 1;
        repeated string image_url = 2;
    }

    repeated string vacancies_ids = 1;
    map<string, VacancyDetails> vacancies = 2;
    map<string, Company> companies = 3;
    map<string, VacancyCategory> categories = 4;
    google.protobuf.StringValue cursor = 5;
}

// Get Vacancy Details
message GetVacancyDetailsRequest {
    string vacancy_id = 1;
}

message GetVacancyDetailsResponse {
    message CompanyDescription {
        string description = 1;
    }

    message VacancyLocation {
        float latitude = 1;
        float longitude = 2;
    }

    message VacancyDescription {
        string description = 1;
        uint32 work_months_experience = 2;
        string work_schedule = 3;
    }

    message VacancyCompany {
        Company company = 1;
        CompanyDescription description = 2;
    }

    message VacancyImage {
        repeated string image_url = 1;
    }

    Vacancy vacancy = 1;
    VacancyImage image = 2;
    VacancyLocation location = 3;
    VacancyDescription description = 4;
    VacancyCompany company = 5;
    map<string, VacancyCategory> categories = 6;
}

// Entity
message Empty {
}

enum Currency {
    CURRENCY_UNKNOWN = 0;
    CURRENCY_UAH = 1;
}

message Company {
    string id = 1;
    string title = 2;
    string logo_url = 3;
}

message Vacancy {
    string id = 1;
    string title = 2;
    string phone = 3;
    int32 min_salary = 4;
    int32 max_salary = 5;
    string company_id = 6;
    Currency currency = 7;
    repeated string categories = 8;
}

message VacancyCategory {
    string title = 1;
}